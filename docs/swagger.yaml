basePath: /api/v1
definitions:
  ModifyRoleRequest:
    properties:
      email:
        type: string
      role:
        type: integer
    type: object
  Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  createRequest:
    properties:
      avatar:
        type: string
      college:
        type: string
      contact_number:
        type: string
      contact_way:
        type: string
      gender:
        type: string
      grade:
        type: string
      group:
        type: string
      if_other_organization:
        type: string
      major:
        type: string
      name:
        type: string
      reason:
        type: string
      self_introduction:
        type: string
      student_id:
        type: string
      understand:
        type: string
    required:
    - avatar
    - college
    - contact_number
    - contact_way
    - gender
    - grade
    - group
    - if_other_organization
    - major
    - name
    - reason
    - self_introduction
    - student_id
    - understand
    type: object
  deleteRequest:
    properties:
      email:
        type: string
    type: object
  editRequest:
    properties:
      avatar:
        type: string
      college:
        type: string
      contact_number:
        type: string
      contact_way:
        type: string
      gender:
        type: string
      grade:
        type: string
      group:
        type: string
      if_other_organization:
        type: string
      major:
        type: string
      name:
        type: string
      reason:
        type: string
      self_introduction:
        type: string
      student_id:
        type: string
      understand:
        type: string
    type: object
  errno.Errno:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  file.Homework:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      group_id:
        type: integer
      homework_id:
        type: integer
      id:
        type: integer
      status:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  file.HomeworkPublished:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      file_url:
        type: string
      group_id:
        type: integer
      homeworks:
        items:
          $ref: '#/definitions/file.Homework'
        type: array
      id:
        type: integer
      publisher:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  homework.CommentRequest:
    properties:
      content:
        type: string
      homework_id:
        type: integer
    required:
    - content
    - homework_id
    type: object
  homework.HomeworkRequest:
    properties:
      content:
        type: string
      file_url:
        type: string
      homework_id:
        type: integer
      title:
        type: string
    required:
    - content
    - homework_id
    - title
    type: object
  homework.ModifyHomeworkRequest:
    properties:
      content:
        type: string
      file_url:
        type: string
      title:
        type: string
    type: object
  homework.ModifyPublishedHomeworkRequest:
    properties:
      content:
        type: string
      file_url:
        type: string
      group_id:
        type: integer
      title:
        type: string
    type: object
  homework.PerformanceResponse:
    properties:
      content:
        type: string
      id:
        type: integer
      status:
        type: integer
      title:
        type: string
      url:
        type: string
    type: object
  listResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/user'
        type: array
    type: object
  loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  loginResponse:
    properties:
      token:
        type: string
    type: object
  moveRequest:
    properties:
      email:
        type: string
      group:
        type: string
    type: object
  schedule.ScheduleModel:
    properties:
      admission_status:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      form_status:
        type: integer
      group:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      work_status:
        type: integer
    type: object
  searchRequest:
    properties:
      group:
        type: string
    type: object
  updateInfoRequest:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  user:
    properties:
      avatar:
        type: string
      college:
        type: string
      contact_number:
        type: string
      contact_way:
        type: string
      email:
        type: string
      gender:
        type: string
      grade:
        type: string
      id:
        type: integer
      major:
        type: string
      name:
        type: string
      role:
        type: integer
      student_id:
        type: string
    type: object
  user.AdminResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
      student_id:
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        description: PasswordAgain string `json:"password_again" form:"password_again"`
        type: string
      name:
        type: string
      password:
        type: string
      student_id:
        type: string
    required:
    - email
    - name
    - password
    - student_id
    type: object
  userProfile:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
    type: object
  viewothersRequest:
    properties:
      email:
        type: string
    type: object
host: work.test.muxi-tech.xyz
info:
  contact: {}
  description: The
  title: MuXiFresh-be
  version: "1.0"
paths:
  /auth/administrator:
    get:
      consumes:
      - json/application
      description: 查看所有管理员
      parameters:
      - description: 获取email
        in: header
        name: Authorization
        required: true
        type: string
      - description: 2--管理员   4--超管
        in: query
        name: role
        required: true
        type: integer
      produces:
      - json/application
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.AdminResponse'
      summary: Get Authority
      tags:
      - auth
  /auth/authorize/:email/:role:
    put:
      consumes:
      - application/json
      description: Modifying User Rights
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 被修改用户的id
        in: path
        name: email
        required: true
        type: string
      - description: 权限等级
        in: path
        name: role
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "500":
          description: 失败
      summary: Authorize
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: 邮箱注册登录
      parameters:
      - description: 注册用户信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"将student_id作为token保留"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/errno.Errno'
        "401":
          description: '{"error_code":"10001", "message":"The email address has been
            registered"} '
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Register
      tags:
      - auth
  /form:
    post:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: create_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/createRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"创建报名表"'
      tags:
      - form
    put:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: edit_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/editRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"编辑报名表"'
      tags:
      - form
  /form/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: delete_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/deleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"删除报名表、进度等信息"'
      tags:
      - form
  /form/search:
    post:
      consumes:
      - application/json
      description: '"输入两位数字符如‘11’ -前一位表示（1-产品，2-安卓，3-设计，4-前端，5-后端）-后一位表示（1-已报名，2-初试过，3-面试过）"'
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 按组查询报名表
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/searchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"分组查看报名者信息"'
      tags:
      - form
  /form/view:
    get:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"查看报名表（个人）"'
      tags:
      - form
    post:
      consumes:
      - application/json
      description: 通过email查看成员报名表
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 查看他人报名表
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/viewothersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"查看报名表（其他成员）"'
      tags:
      - form
  /homework:
    post:
      consumes:
      - application/json
      description: 上传完成的作业
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 提交作业内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/homework.HomeworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Upload homework
      tags:
      - homework
  /homework/change/published/:id:
    post:
      consumes:
      - application/json
      description: 修改已发布的作业
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 修改内容
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/homework.ModifyPublishedHomeworkRequest'
      - description: 发布的的作业id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Modify published homework
      tags:
      - homework
  /homework/change/uploaded/:id:
    post:
      consumes:
      - application/json
      description: 修改已经上传的作业
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 修改内容
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/homework.ModifyHomeworkRequest'
      - description: 上传的作业id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Modify homework
      tags:
      - homework
  /homework/comment:
    get:
      consumes:
      - json/application
      description: 查看已发布的评论
      parameters:
      - description: 获取email
        in: header
        name: Authorization
        required: true
        type: string
      - description: id--帖子的id
        in: query
        name: id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - json/application
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Get comments
      tags:
      - homework
    post:
      consumes:
      - application/json
      description: Add comment to one's homework
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: HomeworkID 评论作业的id || Content 评论内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/homework.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Comment on Homework
      tags:
      - homework
  /homework/comment/:comment_id:
    delete:
      consumes:
      - json/application
      description: 删除用户发布的帖子
      parameters:
      - description: 获取email
        in: header
        name: Authorization
        required: true
        type: string
      - description: 评论的id
        in: path
        name: comment_id
        required: true
        type: integer
      produces:
      - json/application
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":{}}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Delete comment
      tags:
      - homework
  /homework/handed:
    get:
      consumes:
      - application/json
      description: Get the submitted homework by group
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 小组id
        in: query
        name: group_id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"homwork":"","num":"作业数量"}'
          schema:
            type: string
      summary: Get handed homework
      tags:
      - homework
  /homework/performance:
    get:
      consumes:
      - application/json
      description: 查看用户所有作业的完成状况
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            items:
              $ref: '#/definitions/homework.PerformanceResponse'
            type: array
        "500":
          description: '{"msg":"Error occurred while getting url queries."}'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Get Performance
      tags:
      - homework
  /homework/publish:
    post:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: content--作业内容 ; group_id--小组id   1-设计组 2-产品组 3-安卓组 4-前端组 5-后端组
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/homework.HomeworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Publish homework
      tags:
      - homework
  /homework/published:
    get:
      consumes:
      - application/json
      description: 查看不同组别的作业
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: group_id--小组id 1-设计组 2-产品组 3-安卓组 4-前端组 5-后端组
        in: query
        name: group_id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            items:
              $ref: '#/definitions/file.HomeworkPublished'
            type: array
        "500":
          description: '{"msg":"Error occurred while getting url queries."}'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Get Published Homework
      tags:
      - homework
  /homework/published/:id/mine:
    get:
      consumes:
      - application/json
      description: 查看我的作业
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: homework 的id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            $ref: '#/definitions/file.Homework'
        "500":
          description: '{"msg":"Error occurred while getting url queries."}'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Get My Homework
      tags:
      - homework
  /homework/published/details/:id:
    get:
      consumes:
      - application/json
      description: get the published homework details
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 发布的作业id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            $ref: '#/definitions/file.HomeworkPublished'
      summary: Get homework details
      tags:
      - homework
  /homework/review:
    get:
      consumes:
      - application/json
      description: review the homework handed
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 作业id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            $ref: '#/definitions/file.Homework'
      summary: Review homework
      tags:
      - homework
  /movegroup:
    post:
      consumes:
      - application/json
      description: 将email对应的成语移动到指定分组
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: move_request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/moveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: '"移动分组"'
      tags:
      - form
  /schedule:
    get:
      consumes:
      - application/json
      description: '"进度查询板块呈现的表格"'
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule.ScheduleModel'
      summary: '"查看进度"'
      tags:
      - schedule
  /schedule/admit/:name:
    put:
      consumes:
      - application/json
      description: '"审阅板块录取某位学生"'
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: '"录取"'
      tags:
      - schedule
  /schedule/cancel_admission/:name:
    put:
      consumes:
      - application/json
      description: '"审阅板块取消录取某位学生"'
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: '"取消录取"'
      tags:
      - schedule
  /user:
    put:
      consumes:
      - application/json
      description: 更改用户信息
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: Avatar头像|| NickName昵称
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/updateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: '{"Code":400, "Message":"Error occurred while binding the request
            body to the struct","Data":nil}'
          schema:
            type: string
        "500":
          description: '{"Code":500,"Message":"Database error","Data":nil}'
          schema:
            type: string
      summary: Update User Info
      tags:
      - user
  /user/info:
    get:
      consumes:
      - json/application
      description: 得到用户所有的个人信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - json/application
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user'
      summary: GetInfo
      tags:
      - user
  /user/list:
    get:
      consumes:
      - application/json
      description: 通过 group 和 team 获取 user_list
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: last_id
        in: query
        name: last_id
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: group_id
        in: path
        name: group_id
        required: true
        type: integer
      - description: team_id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/listResponse'
      summary: get user_list api
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginResponse'
      summary: login api
      tags:
      - auth
  /user/profile/:email:
    get:
      consumes:
      - application/json
      description: 通过 userId 获取完整 user 信息
      parameters:
      - description: user_email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: '{"Code":400,"Message":"Error occurred while getting path param.","Data":nil}'
          schema:
            type: string
        "500":
          description: '{"Code":500,"Message":"Internal server error","Data":nil}'
          schema:
            type: string
      summary: Get user_profile api
      tags:
      - user
  /user/qiniu_token:
    get:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Code":200,"Token":"token"}
          schema:
            type: string
      summary: Get Qiniuyun token
      tags:
      - user
  /user/role:
    put:
      consumes:
      - application/json
      description: '"修改某个用户的权限等级"'
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: modifyRoleRequest
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/ModifyRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: '"设置权限"'
      tags:
      - user
swagger: "2.0"
tags:
- description: 用户服务
  name: user
