basePath: /api/v1
definitions:
  Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  errno.Errno:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  file.Homework:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      homework_id:
        type: integer
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  file.HomeworkPublished:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      file_url:
        type: string
      group_id:
        type: integer
      homeworks:
        items:
          $ref: '#/definitions/file.Homework'
        type: array
      id:
        type: integer
      publisher:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  homework.CommentRequest:
    properties:
      content:
        type: string
      homework_id:
        type: integer
    required:
    - content
    - homework_id
    type: object
  homework.HomeworkRequest:
    properties:
      content:
        type: string
      file_url:
        type: string
      homework_id:
        type: integer
      title:
        type: string
    required:
    - content
    - homework_id
    - title
    type: object
  listResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/user'
        type: array
    type: object
  loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  loginResponse:
    properties:
      token:
        type: string
    type: object
  updateInfoRequest:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  user:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
    type: object
  user.RegisterRequest:
    properties:
      email:
        description: PasswordAgain string `json:"password_again" form:"password_again"`
        type: string
      name:
        type: string
      password:
        type: string
      student_id:
        type: string
    required:
    - email
    - name
    - password
    - student_id
    type: object
  userProfile:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
    type: object
host: work.test.muxi-tech.xyz
info:
  contact: {}
  description: The
  title: MuXiFresh-be
  version: "1.0"
paths:
  /auth/authorize/:id/:role:
    put:
      consumes:
      - application/json
      description: Modifying User Rights
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 被修改用户的id
        in: header
        name: id
        required: true
        type: integer
      - description: 权限等级
        in: header
        name: role
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "500":
          description: 失败
      summary: Authorize
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: 邮箱注册登录
      parameters:
      - description: 注册用户信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"将student_id作为token保留"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/errno.Errno'
        "401":
          description: '{"error_code":"10001", "message":"The email address has been
            registered"} '
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Register
      tags:
      - auth
  /homework:
    post:
      consumes:
      - application/json
      description: 上传完成的作业
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 提交作业内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/homework.HomeworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Upload homework
      tags:
      - homework
  /homework/comment:
    get:
      consumes:
      - json/application
      description: 查看已发布帖子的评论内容
      parameters:
      - description: 获取email
        in: header
        name: Authorization
        required: true
        type: string
      - description: id--帖子的id
        in: query
        name: id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - json/application
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":{}}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Get comments
      tags:
      - homework
    post:
      consumes:
      - application/json
      description: Add comment to one's homework
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: HomeworkID 评论作业的id || Content 评论内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/homework.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: comment on homework
      tags:
      - homework
  /homework/comment/:comment_id:
    delete:
      consumes:
      - json/application
      description: 删除用户发布的帖子
      parameters:
      - description: 获取email
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - json/application
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":{}}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Delete comment
      tags:
      - homework
  /homework/publish:
    get:
      consumes:
      - application/json
      description: 查看不同组别的作业
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: group_id--小组id 1-设计组 2-产品组 3-安卓组 4-前端组 5-后端组
        in: query
        name: group_id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            items:
              $ref: '#/definitions/file.HomeworkPublished'
            type: array
        "500":
          description: '{"msg":"Error occurred while getting url queries."}'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Get Homework
      tags:
      - homework
    post:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: content--作业内容 ; group_id--小组id   1-设计组 2-产品组 3-安卓组 4-前端组 5-后端组
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/homework.HomeworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"Code":"200","Message":"Success","Data":nil}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errno.Errno'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errno.Errno'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Publish homework
      tags:
      - homework
  /homework/review:
    get:
      consumes:
      - application/json
      description: review the homework handed
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 不同组别的作业，1-设计组 2-产品组 3-安卓组 4-前端组 5-
        in: query
        name: id
        required: true
        type: integer
      - description: 'limit--偏移量指定开始返回记录之前要跳过的记录数 '
        in: query
        name: limit
        required: true
        type: integer
      - description: 'page--限制指定要检索的记录数 '
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"查看成功"}'
          schema:
            items:
              $ref: '#/definitions/file.Homework'
            type: array
        "500":
          description: '{"msg":"Error occurred while getting url queries."}'
          schema:
            $ref: '#/definitions/errno.Errno'
      summary: Review homework
      tags:
      - homework
  /user:
    put:
      consumes:
      - application/json
      description: 更改用户信息
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: Avatar头像|| NickName昵称
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/updateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: '{"Code":400, "Message":"Error occurred while binding the request
            body to the struct","Data":nil}'
          schema:
            type: string
        "500":
          description: '{"Code":500,"Message":"Database error","Data":nil}'
          schema:
            type: string
      summary: Update User Info
      tags:
      - user
  /user/list:
    get:
      consumes:
      - application/json
      description: 通过 group 和 team 获取 user_list
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: last_id
        in: query
        name: last_id
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: group_id
        in: path
        name: group_id
        required: true
        type: integer
      - description: team_id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/listResponse'
      summary: get user_list api
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginResponse'
      summary: login api
      tags:
      - auth
  /user/profile/:id:
    get:
      consumes:
      - application/json
      description: 通过 userId 获取完整 user 信息
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: '{"Code":400,"Message":"Error occurred while getting path param.","Data":nil}'
          schema:
            type: string
        "500":
          description: '{"Code":500,"Message":"Internal server error","Data":nil}'
          schema:
            type: string
      summary: Get user_profile api
      tags:
      - user
  /user/qiniu_token:
    get:
      consumes:
      - application/json
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Code":200,"Token":"token"}
          schema:
            type: string
      summary: Get Qiniuyun token
      tags:
      - user
swagger: "2.0"
tags:
- description: 用户服务
  name: user
